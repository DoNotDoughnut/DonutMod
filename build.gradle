plugins {
	id 'fabric-loom' version '0.4-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
       	maven { // Cloth config, libGui
        	name = "CottonMC"
        	url = "https://server.bbkr.space/artifactory/libs-release"
    	}
    	maven { // Trinkets
    		name = "Emily Ploszaj's Repo"
			url = "https://jitpack.io"
//			content {
//				includeGroup("com.github.emilyposzaj")
//			}
		}
		maven { //LibStructure
			name = "EarthComputer's Repo"
			url = "https://dl.bintray.com/earthcomputer/mods"
		}
}

dependencies {

	// implementation "com.google.guava:guava:29.0-jre"

	// Minecraft

	minecraft("com.mojang:minecraft:${project.minecraft_version}")
	
	// Yarn Mappings
	
	mappings("net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_mappings_build}:v2")// at "Fabric"
	
	// Fabric loader
	
	modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")// at "Fabric"
	
	// Fabric API
	
	modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")// at "Fabric"
	modImplementation("net.fabricmc.fabric-api:fabric-events-lifecycle-v0:${project.fabric_events_lifecycle_version}")

	// Cloth config v2

	modApi("me.shedaniel.cloth:config-2:${project.cloth_config_version}")// at "CottonMC"
	include("me.shedaniel.cloth:config-2:${project.cloth_config_version}")// at "CottonMC"
	
	// Auto config
	
	modApi("me.sargunvohra.mcmods:autoconfig1u:${project.auto_config_version}")// at "CottonMC"
	include("me.sargunvohra.mcmods:autoconfig1u:${project.auto_config_version}")// at "CottonMC"
	
	// LibGUI
	
	// modImplementation("io.github.cottonmc:LibGui:${project.libgui_version}+${project.minecraft_version}") at "CottonMC"
	// include("io.github.cottonmc:LibGui:${project.libgui_version}+${project.minecraft_version}") at "CottonMC"
	
	// ModMenu
	
	modImplementation("io.github.prospector:modmenu:${project.modmenu_version}")// at "Fabric"
	
	// Trinkets
	
	modImplementation("com.github.emilyploszaj:trinkets:v${project.trinkets_version}")// at "Emily Ploszaj's Repo"
	
	// LibStructure
	
	modImplementation("net.earthcomputer:libstructure:${project.libstructure_version}")// at "EarthComputer's Repo"

}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	repositories {
		mavenLocal()
	}
}
